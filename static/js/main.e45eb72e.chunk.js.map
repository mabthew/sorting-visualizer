{"version":3,"sources":["algorithms/bubbleSort.js","algorithms/insertionSort.js","algorithms/selectionSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","components/histogram.jsx","App.js","serviceWorker.js","index.js"],"names":["bubbleSort","arr","swapping","swaps","len","length","i","push","props","style","height","temp","insertionSort","j","console","log","selectionSort","min","mergeSort","mainArray","startIdx","endIdx","auxiliaryArray","middleIdx","Math","floor","k","merge","quickSort","low","high","pi","pivot","partition","Histogram","state","bars","comparisons","speed","size","busy","displayStyles","selectedStyle","algorithms","selectedAlgorithm","shuffle","bind","swap","moveAhead","sort","performSwaps","changeSpeed","changeSize","changeStyle","changeAlgorithm","this","populateDropdowns","createBars","value","display","setState","displayStyle","arrayBars","document","getElementsByClassName","backgroundColor","window","innerHeight","getElementById","offsetHeight","width","innerWidth","divStyle","margin","className","key","calculateColor","forEach","bar","algorithm","newValue","target","e","inputValue","setTimeout","newBars","slice","random","x","count","backup","id","type","max","defaultValue","onChange","disabled","Button","onClick","variant","map","React","Component","histogramSize","frequency","r","sin","g","b","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e45eb72e.chunk.js","sourcesContent":["function bubbleSort(arr) {\n  var swapping;\n  var swaps = [];\n  var len = arr.length - 1;\n  do {\n    swapping = false;\n    for (let i = 0; i < len; i++) {\n      swaps.push([\"compare\", i, i + 1]);\n      if (arr[i].props.style.height > arr[i + 1].props.style.height) {\n        let temp = arr[i];\n        arr[i] = arr[i + 1];\n        arr[i + 1] = temp;\n        swaps.push([\"swap\", i, i + 1]);\n        swapping = true;\n      }\n      swaps.push([\"uncompare\", i, i + 1]);\n    }\n    // swaps.push([\"sorted\", len])\n    len--;\n  } while (swapping);\n\n  while (len >= 0) {\n    for (let i = 0; i < len; i++) {\n      swaps.push([\"compare\", i, i + 1])\n      swaps.push([\"uncompare\", i, i + 1])\n    }\n    // swaps.push([\"sorted\", len+1])\n    len--;\n  }\n  // swaps.push([\"sorted\", len+1])\n\n  return swaps;\n}\n\nexport default bubbleSort;","function insertionSort(arr) {\n  var len = arr.length;\n  var swaps = [];\n  for (let i = 0; i < len; i++) {\n    let temp = arr[i];\n    let j;\n    for (j = i - 1; j >= 0; j--) {\n      swaps.push([\"compare\", j + 1, i]);\n      if (arr[j].props.style.height <= temp.props.style.height) {\n        break;\n      }\n      arr[j + 1] = arr[j];\n      swaps.push([\"swap\", j + 1, j]);\n      swaps.push([\"uncompare\", j + 1, i]);\n    }\n    console.log(j + 1, i)\n    swaps.push([\"uncompare\", j + 1, i]);\n    arr[j + 1] = temp;\n  }\n\n  // for (let i = 0; i < arr.length; i++) {\n  //   swaps.push(['sorted', i])\n  // } \n  return swaps;\n}\n\nexport default insertionSort;","function selectionSort(arr) {\n    var len = arr.length, min;\n\n    var swaps = [];\n\n    for (let i = 0; i < len; i++) {\n\n        min = i;\n\n        for (let j = i + 1; j < len; j++) {\n            swaps.push([\"compare\", j, min])\n            if (arr[j].props.style.height < arr[min].props.style.height) {\n                swaps.push([\"uncompare\", min]);\n                min = j;\n            }\n            swaps.push([\"uncompare\", j, min])\n        }\n\n        if (i !== min) {\n            swaps.push([\"swap\", i, min]);\n            var temp = arr[i];\n            arr[i] = arr[min];\n            arr[min] = temp;\n            swaps.push([\"uncompare\", i])\n            // swaps.push([\"sorted\", i])\n        } else {\n            swaps.push([\"uncompare\", min])\n            // swaps.push([\"sorted\", min])\n        }\n\n    }\n    return swaps;\n}\n\nexport default selectionSort;","function mergeSort(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  swaps,\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSort(auxiliaryArray, startIdx, middleIdx, mainArray, swaps);\n  mergeSort(auxiliaryArray, middleIdx + 1, endIdx, mainArray, swaps);\n  merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, swaps);\n}\n\nfunction merge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  swaps,\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    swaps.push([\"compare\", i, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    swaps.push([\"uncompare\", i, j]);\n    if (auxiliaryArray[i].props.style.height <= auxiliaryArray[j].props.style.height) {\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      swaps.push([\"valueSwap\", k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      swaps.push([\"valueSwap\", k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    // swaps.push([\"compare\", i, i]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    // swaps.push([\"uncompare\", i, i]);\n    // We overwrite the value at index k in the original array with the\n    // value at index i in the auxiliary array.\n    swaps.push([\"valueSwap\", k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    // swaps.push([\"compare\", j, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    // swaps.push([\"uncompare\", j, j]);\n    // We overwrite the value at index k in the original array with the\n    // value at index j in the auxiliary array.\n    swaps.push([\"valueSwap\", k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nexport default mergeSort;","function quickSort(arr, low, high, swaps) {\n    if (low < high)  \n    {  \n        /* pi is partitioning index, arr[p] is now  \n        at right place */\n        let pi = partition(arr, low, high, swaps);  \n  \n        // Separately sort elements before  \n        // partition and after partition  \n        quickSort(arr, low, pi - 1, swaps);  \n        quickSort(arr, pi + 1, high, swaps);  \n    }  \n  }\n  \n  function partition(arr, low, high, swaps) {\n    let pivot = arr[high]; // pivot  \n    let i = (low - 1); // Index of smaller element  \n  \n    for (let j = low; j <= high - 1; j++)  \n    {  \n        // If current element is smaller than the pivot \n        if (i >= 0) {\n            // swaps.push([\"compare\", i, j]);\n        }\n        \n        if (arr[j].props.style.height < pivot.props.style.height)  \n        {  \n            i++; // increment index of smaller element\n            if (i >= 0) {\n                swaps.push([\"swap\", i, j]);\n            }\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n        \n        // swaps.push([\"uncompare\", i, j]);\n    }  \n    // swaps.push([\"compare\", i+1, high]);\n    swaps.push([\"swap\", i+1, high]);\n    // swaps.push([\"uncompare\", i+1, high]);\n    let temp = arr[i+1];\n    arr[i+1] = arr[high];\n    arr[high] = temp; \n    return (i + 1);  \n  }\n  \n  export default quickSort;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport bubbleSort from \"../algorithms/bubbleSort\";\nimport insertionSort from \"../algorithms/insertionSort\";\nimport selectionSort from \"../algorithms/selectionSort\";\nimport mergeSort from \"../algorithms/mergeSort\";\nimport quickSort from \"../algorithms/quickSort\";\nimport './histogram.css';\nimport { createPortal } from 'react-dom';\n\nexport default class Histogram extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bars: [],\n      swaps: [],\n      comparisons: [],\n      speed: 1000 / 5,\n      size: 12,\n      busy: false,\n      displayStyles: [],\n      selectedStyle: \"Clear\",\n      algorithms: [],\n      selectedAlgorithm: \"bubbleSort\"\n    };\n\n    this.shuffle = this.shuffle.bind(this);\n    this.swap = this.swap.bind(this);\n    this.moveAhead = this.moveAhead.bind(this);\n    this.sort = this.sort.bind(this);\n    this.performSwaps = this.performSwaps.bind(this);\n    this.changeSpeed = this.changeSpeed.bind(this);\n    this.changeSize = this.changeSize.bind(this);\n    this.changeStyle = this.changeStyle.bind(this);\n    this.changeAlgorithm = this.changeAlgorithm.bind(this);\n  }\n\n  componentDidMount() {\n    this.populateDropdowns();\n    this.createBars(this.state.selectedStyle);\n  }\n\n  populateDropdowns() {\n    let displayStyles = []\n    displayStyles.push({ value: 'Clear', display: 'Straightfoward' });\n    displayStyles.push({ value: 'Pretty', display: 'Satisfiying' });\n\n    let algorithms = []\n    algorithms.push({ value: \"bubbleSort\", display: \"Bubble Sort\" });\n    algorithms.push({ value: \"insertionSort\", display: \"Insertion Sort\" });\n    algorithms.push({ value: \"selectionSort\", display: \"Selection Sort\" });\n    algorithms.push({ value: \"mergeSort\", display: \"Merge Sort\" });\n\n    this.setState({ displayStyles, algorithms });\n  }\n\n  createBars(displayStyle) {\n    let bars = [];\n\n    if (displayStyle === \"Clear\") {\n\n      const arrayBars = document.getElementsByClassName('bar')\n      for (let i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = `rgb(255, 255, 255)`;\n      }\n      for (let i = 0; i < this.state.size; i++) {\n        let color = `rgb(255,255,255)`;\n        let height = (window.innerHeight - document.getElementById(\"options\").offsetHeight) / this.state.size * (i + 1);\n        let width = window.innerWidth / this.state.size / 2;\n        let divStyle = {\n          backgroundColor: color,\n          height: height,\n          width: width,\n          margin: width / 4,\n        };\n\n        bars.push(<div className=\"bar\" key={i} style={divStyle}></div>);\n      }\n    } else {\n      for (let i = 0; i < this.state.size; i++) {\n\n        let color = calculateColor(i, this.state.bars.length);\n        let height = (window.innerHeight - document.getElementById(\"options\").offsetHeight) / this.state.size * (i + 1);\n        let width = window.innerWidth / this.state.size;\n        let divStyle = {\n          backgroundColor: color,\n          height: height,\n          width: width\n        };\n\n        bars.push(<div className=\"bar\" key={i} style={divStyle}></div>);\n      }\n    }\n    console.log('starting here\\n\\n\\n\\n\\n')\n    bars.forEach((bar) => console.log(bar.props.style.height))\n    this.setState({ bars });\n  }\n\n  changeAlgorithm(algorithm) {\n    this.setState({ selectedAlgorithm: algorithm })\n  }\n\n  changeSpeed(newValue) {\n    this.setState({ speed: 1000 / newValue.target.value })\n  }\n\n  changeSize(e) {\n    var inputValue = e.target.value;\n    setTimeout(() => {\n      this.setState({ size: inputValue })\n      this.createBars(this.state.selectedStyle);\n    }, 0);\n  }\n\n  changeStyle(displayStyle) {\n\n    this.setState({ selectedStyle: displayStyle });\n\n    let bars = [];\n\n    if (displayStyle === \"Clear\") {\n\n      for (let i = 0; i < this.state.size; i++) {\n\n        let color = `rgb(255,255,255)`;\n        let height = this.state.bars[i].props.style.height\n        let width = window.innerWidth / this.state.size / 2;\n        let divStyle = {\n          backgroundColor: color,\n          height: height,\n          width: width,\n          margin: width / 4,\n        };\n\n\n        bars[i] = <div className=\"bar\" key={i} style={divStyle}></div>;\n      }\n    } else {\n      for (let i = 0; i < this.state.size; i++) {\n\n        let color = calculateColor(this.state.bars[i].key, this.state.bars.length);\n        let height = this.state.bars[i].props.style.height;\n        let width = window.innerWidth / this.state.size;\n        let divStyle = {\n          backgroundColor: color,\n          height: height,\n          width: width\n        };\n\n\n        bars[i] = <div className=\"bar\" key={i} style={divStyle}></div>;\n      }\n    }\n\n    this.setState({ bars });\n  }\n\n  // https://javascript.info/task/shuffle\n  // make the array an array of BARS instead of heights?\n  shuffle() {\n    if (this.state.selectedStyle === \"Clear\") {\n      const arrayBars = document.getElementsByClassName('bar')\n      for (let i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = `rgb(255, 255, 255)`;\n      }\n    }\n\n    const newBars = this.state.bars.slice();\n    for (let i = this.state.size - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      // swap bars\n      var temp = newBars[i];\n      newBars[i] = newBars[j];\n      newBars[j] = temp;\n    }\n    this.setState({ bars: newBars });\n  }\n\n  moveAhead(x, i, j) {\n    // console.log(i, j);\n    // let temp = x[j];\n    // let newArray = x.slice(0, i);\n    // newArray.push(temp);\n    // newArray = newArray.concat(x.slice(i, j)).concat(x.slice(j+1, x.length));\n    // this.setState({bars: newArray});\n    // console.log(this.state.bars)\n  }\n\n  swap(x, i, j) {\n    let temp = x[i];\n    x[i] = x[j];\n    x[j] = temp;\n    this.setState({ bars: x });\n  }\n\n  performSwaps(swaps) {\n    let x = this.state.bars.slice();\n    const arrayBars = document.getElementsByClassName('bar');\n    if (this.state.selectedStyle === \"Clear\") {\n      for (let i = 0; i < swaps.length; i++) {\n        if (swaps[i][0] === \"swap\") {\n          setTimeout(() => {\n            arrayBars[swaps[i][1]].style.backgroundColor = `rgb(0, 255, 0)`;\n            arrayBars[swaps[i][2]].style.backgroundColor = `rgb(0, 255, 0)`;\n          }, (i - .66) * this.state.speed);\n          setTimeout(() => {\n            this.swap(x, swaps[i][1], swaps[i][2]);\n          }, i * this.state.speed);\n        } else if (swaps[i][0] === \"compare\") {\n\n          //var barOneColor = arrayBars[swaps[i][1]].style.backgroundColor;\n          // if (swaps[i].length === 3) {\n          //   var barTwoColor = arrayBars[swaps[i][2]].style.backgroundColor;\n          // }\n          setTimeout(() => {\n            arrayBars[swaps[i][1]].style.backgroundColor = `rgb(255, 0, 0)`;\n            if (swaps[i].length === 3) {\n              arrayBars[swaps[i][2]].style.backgroundColor = `rgb(255, 0, 0)`;\n            }\n          }, (i) * this.state.speed);\n        } else if (swaps[i][0] === \"valueSwap\") {\n          // move bar at swaps[i][2] to index swaps[i][1]\n          // will require shifting of every element\n          setTimeout(() => {\n            //arrayBars[swaps[i][2]].style.backgroundColor = `rgb(0, 255, 0)`;\n            arrayBars[swaps[i][1]].style.height = `${swaps[i][2].props.style.height}px`;\n          }, (i) * this.state.speed);\n        } else if (swaps[i][0] === \"uncompare\") {\n          setTimeout(() => {\n            arrayBars[swaps[i][1]].style.backgroundColor = `rgb(255, 255, 255)`;\n            if (swaps[i].length === 3) {\n              arrayBars[swaps[i][2]].style.backgroundColor = `rgb(255, 255, 255)`;\n            }\n          }, i * this.state.speed);\n        } else if (swaps[i][0] === \"sorted\") {\n          setTimeout(() => {\n            arrayBars[swaps[i][1]].style.backgroundColor = `rgb(255, 215, 0)`;\n          }, (i) * this.state.speed);\n        }\n      }\n      setTimeout(() => {\n        this.setState({ busy: false });\n      }, swaps.length * this.state.speed);\n\n    } else {\n      let count = 0;\n      for (let i = 0; i < swaps.length; i++) {\n        if (swaps[i][0] === \"swap\") {\n          count++;\n          setTimeout(() => {\n            this.swap(x, swaps[i][1], swaps[i][2]);\n          }, count * this.state.speed);\n        } else if (swaps[i][0] === \"valueSwap\") {\n          // move bar at swaps[i][2] to index swaps[i][1]\n          // will require shifting of every element\n          setTimeout(() => {\n            //arrayBars[swaps[i][2]].style.backgroundColor = `rgb(0, 255, 0)`;\n            arrayBars[swaps[i][1]].style.height = `${swaps[i][2].props.style.height}px`;\n            arrayBars[swaps[i][1]].style.backgroundColor = `${swaps[i][2].props.style.backgroundColor}`;\n          }, (i) * this.state.speed);\n        }\n      }\n      setTimeout(() => {\n        this.setState({ busy: false });\n\n      }, count * this.state.speed);\n    }\n  }\n\n  sort() {\n    this.setState({ busy: true });\n    let arr = this.state.bars.slice();\n    let swaps = [];\n\n    let algorithm = this.state.selectedAlgorithm;\n\n    if (algorithm === \"bubbleSort\") {\n      swaps = bubbleSort(arr);\n    } else if (algorithm === \"insertionSort\") {\n      swaps = insertionSort(arr);\n    } else if (algorithm === \"selectionSort\") {\n      swaps = selectionSort(arr);\n    } else if (algorithm === \"mergeSort\") {\n      let backup = arr.slice();\n      mergeSort(arr, 0, arr.length - 1, backup, swaps);\n    } else if (algorithm === \"quickSort\") {\n      let backup = arr.slice();\n      quickSort(arr, 0, arr.length - 1, swaps);\n    }\n    this.performSwaps(swaps);\n  }\n\n  render() {\n    return (\n      <div id=\"visualizer\">\n        <div id=\"options\">\n          Speed:\n          <input type=\"range\" min=\"1\" max=\"1000\" defaultValue={this.state.speed} className=\"slider\" id=\"speedRange\" onChange={this.changeSpeed} disabled={this.state.busy}></input>\n          Histogram Size:\n          <input type=\"range\" min=\"4\" max=\"250\" defaultValue=\"12\" className=\"slider\" id=\"sizeRange\" onChange={this.changeSize} disabled={this.state.busy}></input>\n          <Button onClick={this.shuffle} variant=\"primary\" disabled={this.state.busy}>Shuffle</Button>\n          <Button onClick={this.sort} variant=\"secondary\" disabled={this.state.busy}>Sort</Button>\n          <div className=\"dropdown\">\n            Algorithm: \t&nbsp;\n            <select onChange={(e) => this.changeAlgorithm(e.target.value)}>\n              {this.state.algorithms.map((algorithm) => <option key={algorithm.value} value={algorithm.value}>{algorithm.display}</option>)}\n            </select>\n            &nbsp;&nbsp;&nbsp;\n            Display style: \t&nbsp;\n            <select onChange={(e) => this.changeStyle(e.target.value)}>\n              {this.state.displayStyles.map((displayStyle) => <option key={displayStyle.value} value={displayStyle.value}>{displayStyle.display}</option>)}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"histogram\">\n          {this.state.bars}\n        </div>\n      </div>\n    );\n  }\n}\n\n// https://krazydad.com/tutorials/makecolors.php\nfunction calculateColor(i, histogramSize) {\n  let frequency = 5.75 / histogramSize;\n  let center = 128;\n  let width = 127;\n\n  var r = Math.floor(Math.sin(frequency * i + 1) * width + center);\n  var g = Math.floor(Math.sin(frequency * i + 3) * width + center);\n  var b = Math.floor(Math.sin(frequency * i + 5) * width + center);\n\n  return `rgb(${r}, ${g}, ${b})`;\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Histogram from './components/histogram'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Histogram></Histogram>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}